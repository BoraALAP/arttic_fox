@import url(https://fonts.googleapis.com/css?family=Josefin+Sans:100,100i,300,300i,400,400i,600,600i,700,700i);@import url(https://fonts.googleapis.com/css?family=Josefin+Sans:100,100i,300,300i,400,400i,600,600i,700,700i);article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}a:focus{outline:thin dotted}a:active,a:hover{outline:0}h1{font-size:2em;margin:.67em 0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}hr{box-sizing:content-box;height:0}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre-wrap}q{quotes:"\201C" "\201D" "\2018" "\2019"}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}*{text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased}h1,h2,h3,h4,h5,h6{margin:0}h1{font-family:"Josefin Sans",sans-serif;font-size:1.8em;font-weight:900}@media only screen and (min-width:768px){h1{font-size:2.5em}}h2{font-family:"Josefin Sans",sans-serif;font-size:1.5em;font-weight:700;line-height:2.5em}@media only screen and (min-width:768px){h2{font-size:2em}}h3{font-family:"Josefin Sans",sans-serif;font-size:1.3em;font-weight:700;color:#787878;text-transform:uppercase}h4{font-family:"Josefin Sans",sans-serif;font-size:1.5em;font-weight:700}h5{font-family:"Josefin Sans",sans-serif;font-size:1.2em;font-weight:700;margin-bottom:3vh}h6{font-family:"Josefin Sans",sans-serif;font-size:.9em;font-weight:400}p{font-family:"Josefin Sans",sans-serif;font-size:.85em;font-weight:300;margin:0;color:#fff;line-height:2em}a{text-decoration:none;color:#000}a:active,a:focus,a:visited{outline:0;text-decoration:none}nav a{font-family:"Josefin Sans",sans-serif;font-size:.75em;font-weight:500;text-decoration:none}.btn{border:1px solid #000;padding:10px 0;background:#000}button{border:none;background:0 0}html ::-webkit-scrollbar{width:.5em;height:.5em}html ::-webkit-scrollbar-thumb{background:linear-gradient(150deg,#000,#000)}html ::-webkit-scrollbar-track{background:#e6e6e6}html body{scrollbar-face-color:#000;scrollbar-track-color:#e6e6e6}body{margin:0;padding:0;overflow-x:hidden;height:100%;width:100%}ul{list-style-type:none;padding-left:0;margin-bottom:0}.section{min-height:30vh;position:relative}@media only screen and (min-width:768px){.section{min-height:60vh;background-color:#fff}}.fp-section,.fp-slide,.fp-tableCell{height:auto!important}#logo{height:10vh;top:2.5vh;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}#logo #logo_type{text-transform:uppercase;color:#fff;transition:all 2s ease}#logo svg{width:80px;max-height:80px;transition:all 1.7s ease}#logo svg #logo_icon{fill:#fff}#logo h1{font-family:"Josefin Sans",sans-serif;font-size:1.8em;font-weight:900}header{background-color:#000}.content{background:#e6e6e6;background:linear-gradient(45deg,#e6e6e6 0,#fff 85%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000', GradientType=0 );padding-bottom:5vh;top:15vh}.content .carousel-indicators{width:45vw;left:inherit}@media only screen and (min-width:768px){.content .carousel-indicators{width:30vw}}.content .carousel-indicators li{text-indent:0;max-width:none;margin:auto 3vw;-ms-flex:1;flex:1;width:5vw;color:transparent}.content .carousel-indicators li.active{background-color:#000}.content .carousel{padding:10vw}.content .carousel .carousel-item{-ms-flex-direction:column;flex-direction:column}.content p{color:#000}.content h2{color:#000;text-transform:uppercase}#whatwedo{background-color:#fff;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding:5vh 0}#whatwedo .content_container h3{text-align:center}#whatwedo .did_list{margin-top:3vh}#whatwedo .did_list li{margin-top:3vh}#whatwedo .did_list li img{width:90vw}#whatwedo .did_list li .description{background-color:#000;z-index:1000;position:relative;width:80vw;color:#fff;padding:3vh 5vw;margin:-20px auto 0}#whatwedo .did_list li .description span{display:block;font-size:.7em}#whatweliketodo{background-color:#000}#whatweliketodo .todo_container{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:10vh 10vw;text-align:center}#whatweliketodo .todo_container .todo_list:first-child{margin-bottom:20px}#whatweliketodo .todo_container .todo_list h3{color:#fff;margin:20px 0}#whatweliketodo .todo_container .todo_list ul:first-child{margin-bottom:20px;padding-bottom:20px;border-bottom:2px solid #fff}#whatweliketodo .todo_container .todo_list li{color:#fff;padding:15px}#contact{background-color:#fff}#contact .information{background-color:#fff;width:70vw;right:0;bottom:10vh;padding:3vh 0;text-align:center;position:absolute;z-index:500}#contact .information p{color:#000;margin:2vh 0}#contact #map{height:600px}#contact .map_container .map img{width:100%;height:400px}#contact .copy_message{background-color:#000;color:rgba(255,255,255,.7);display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;height:10vh;width:100%;bottom:0;font-size:.6em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
