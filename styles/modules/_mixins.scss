@mixin linearGradient($deg, $buttomleft, $topright){
    background: $buttomleft; /* Old browsers */
    background: -moz-linear-gradient($deg,  $buttomleft 0%, $topright 85%); /* FF3.6+ */
    background: -webkit-gradient(linear, $deg, color-stop(0%,$buttomleft), color-stop(85%,$topright)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient($deg,  $buttomleft 0%,$topright 85%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient($deg,  $buttomleft 0%,$topright 85%); /* Opera 11.10+ */
    background: -ms-linear-gradient($deg,  $buttomleft 0%,$topright 85%); /* IE10+ */
    background: linear-gradient($deg,  $buttomleft 0%,$topright 85%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}
@mixin transition-slide($delay){
  transform: translateX(-1vw);
  opacity: 0;
  transition: all 0.5s cubic-bezier(.33,.02,.6,1) $delay;
}
@mixin transition-scale($delay){
  transform-origin: left;
  transform: scaleX(0);
  transition: all 0.5s cubic-bezier(.33,.02,.6,1) $delay;
}

@mixin transition-slide-fix{
  transform: translateX(0px);
  opacity: 1;
}

@mixin transition-scale-fix{
  transform: scale(1);
}

@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white,  10%)) {
  // For Google Chrome
  ::-webkit-scrollbar {
      width:  $size;
      height: $size;
  }

  ::-webkit-scrollbar-thumb {
      background: linear-gradient(150deg, $foreground-color, darken($foreground-color, 20%));
  }

  ::-webkit-scrollbar-track {
      background: $background-color;
  }

  // For Internet Explorer
  body {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}

// rem fallback - credits: http://zerosixthree.se/

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// center vertically and/or horizontally an absolute positioned element

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    transform:translate(-50% -50%);
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    transform:translateX(-50%);
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    transform:translateY(-50%);
  }
}

// border radius

@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}
